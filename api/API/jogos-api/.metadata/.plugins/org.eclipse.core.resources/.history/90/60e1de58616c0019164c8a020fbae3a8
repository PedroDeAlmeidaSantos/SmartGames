package smart.games.api.resource;

import java.net.URI;
import java.util.List;
import java.util.Optional;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import smart.games.api.model.Jogo;
import smart.games.api.repository.JogoRepository;

@RestController
@RequestMapping("/contatos")
public class JogoResource {

	@Autowired
	private JogoRepository jogoRepository;
	
	@GetMapping
	public List<Jogo> getContatos(){
		return jogoRepository.findAll();
	}
	
	
	//@ResponseStatus(HttpStatus.CREATED) = retorna o código 201 
	@PostMapping
	public ResponseEntity<Jogo> gravar(@RequestBody Jogo jogo, HttpServletResponse response) {
		
		Jogo jogoSalvo = jogoRepository.save(jogo);
		
		URI uri = ServletUriComponentsBuilder.fromCurrentRequestUri().path("/{id}").buildAndExpand(jogoSalvo.getId()).toUri();
				
		response.addHeader("Location", uri.toASCIIString());

		return ResponseEntity.created(uri).body(jogoSalvo);
	}
	
	@GetMapping("/{id}")
	public Optional<Jogo> getJogo(@PathVariable Long id){
		
		return jogoRepository.findById(id);
		
	}
	
	@DeleteMapping("/{id}")
	@ResponseStatus(HttpStatus.NO_CONTENT)
	public void deleteContato(@PathVariable Long id){	
		
		jogoRepository.deleteById(id);
		
	}
	
	@PutMapping("/{id}")
	public ResponseEntity<Jogo> atualizarContatos(@RequestBody Jogo jogo, @PathVariable Long id) {
		
		Jogo jogoSalvo = jogoRepository.findById(id).get();
		BeanUtils.copyProperties(jogo, jogoSalvo, "id");
		jogoRepository.save(jogo);
		
		return ResponseEntity.ok(jogoSalvo);
		
	}

	
	
}